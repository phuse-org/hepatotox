---
title: "Figure 4 Program Code"
author: "Dimple Patel"
format: html
editor: visual
---

```{r warning=FALSE, echo=FALSE, comment=FALSE}
library(dplyr)
library(tern)
library(random.cdisc.data)
library(tidyverse)
library(magrittr)
library(formatters)
library(grid)
library(shiny)
library(plotly)
library(ggvis)
library(patchwork)
library(ggprism)
library(maditr)
library(gridExtra)
library(utile.visuals)
library(forestly)
library(ggrepel)

#Load an ADAE dataset.----
load(file = "/cloud/project/Raw Data/Raw Data Output/adaef4.Rda")

#Load ADSL for future treatment arm reference.----
load(file = "/cloud/project/Raw Data/Raw Data Output/adslf4.Rda")

#NAs are explicit missing levels.----
adaef4b <- df_explicit_na(adaef4)
adslf4b <- df_explicit_na(adslf4)

#Rename the treatment arms.----
levels(adaef4b$ACTARMCD) <- c("T1", "PL", "T2")
levels(adslf4b$ACTARMCD) <- c("T1", "PL", "T2")
levels(adaef4b$ARM) <- c("Treatment 1", "Placebo", "Treatment 2")
adaef4b$ACTARMCD <- factor(adaef4b$ACTARMCD, levels = c("PL", "T1", "T2")) 
adslf4b$ACTARMCD <- factor(adslf4b$ACTARMCD, levels = c("PL", "T1", "T2")) 

adaef4c <- adaef4b %>% add_column(RUNNUM=runif(nrow(.)))

adaef4d <- adaef4c %>% select(USUBJID, SUBJID, SMQ01NAM, ACTARMCD, ARM)

#Get Frequency Count for Each Adverse Event SMQ & number of patients per treatment arm.----
freqsmq <- table(adaef4c$SMQ01NAM, adaef4c$ACTARMCD)
freqsmq1 <- as.data.frame(freqsmq)
patientct <- table(adaef4c$ACTARMCD)
patientct2 <- as.data.frame(patientct)

#Rename freqsmq1 dataframe variables & patientct2 variables for increased readability.
freqsmq2a <- freqsmq1 %>% rename("SMQname" = "Var1", "ACTARMCD" = "Var2")
patientct2a <- patientct2 %>% rename("ACTARMCD" = "Var1")

#Combine frequency count tables by treatment arm.----
freqsaect <- merge(freqsmq2a, patientct2a, by = "ACTARMCD")

#Transpose SMQ freq table.----
freqsmq2 <- freqsaect %>% filter(!SMQname == "<Missing>") %>%
  pivot_wider(
    names_from = "ACTARMCD",
    values_from = c("Freq.x", "Freq.y"),
    id_cols = "SMQname"
  ) 

#Calculate frequency of AE SMQ by each treatment arm.----
freqsmq2a <- freqsmq2 %>% mutate("T1per" = Freq.x_T1/Freq.y_T1*100, "T2per" = Freq.x_T2/Freq.y_T2*100, "PLper"= Freq.x_PL/Freq.y_PL*100)

#Reorder the AE SMQs to match white paper example.
freqsmq2a1 <- freqsmq2a %>% mutate(ordersmq = case_when(SMQname == "ALANINE AMINOTRANSFERASE INCREASED" ~ 1, SMQname == "HEPATIC ENZYME INCREASED" ~ 2, SMQname == "ASPARTATE AMINOTRANSFERASE INCREASED" ~ 3, SMQname == "LIVER FUNCTION TEST ABNORMAL" ~ 4, SMQname == "GAMMA-GLUTAMYLTRANSFERASE INCREASED" ~ 5, SMQname == "HEPATIC FUNCTION ABNORMAL" ~ 6, SMQname == "LIVER DISORDER" ~ 7, 
SMQname == "HEPATIC STEATOSIS" ~ 8, SMQname == "BLOOD BILIRUBIN INCREASED" ~ 9)) %>%
  arrange(ordersmq)

#Calculate risk difference between T1 & PL and then again for T1 and T2. Also calculate Standard #Error and CI intervals.
freqsmq2b <- freqsmq2a1 %>% mutate(RiskT1PL = T1per - PLper, RiskT2T1 = T2per - T1per) %>%
  mutate(SET1PL = sqrt(PLper/100*(1-PLper/100)/(Freq.y_PL) + T1per/100*(1-T1per/100)/(Freq.y_T1)),
         SET2T1 = sqrt(T2per/100*(1-T2per/100)/(Freq.y_T2) + T1per/100*(1-T1per/100)/(Freq.y_T1))) %>% mutate(lowerCIT1PL = RiskT1PL - 1.96*SET1PL, upperCIT1PL = RiskT1PL + 1.96*SET1PL, 
  lowerCIT2T1 = RiskT2T1 - 1.96*SET2T1, upperCIT2T1 = RiskT2T1 + 1.96*SET2T1)

#Update the data frame to include a treatment_arm column (this is key)----
LabT1text <- paste("T1 (", freqsmq2a$Freq.y_T1[1], ")", sep = "")
LabT2text <- paste("T2 (", freqsmq2a$Freq.y_T2[1], ")", sep = "")
LabPLtext <- paste("PL (", freqsmq2a$Freq.y_PL[1], ")", sep = "")

#Create UI page.----
ui <- fluidPage(
  tags$head(
    tags$style(HTML("
      .plot-grid {
        display: grid;
        grid-template-columns: 2.5fr 1fr 1fr;
        gap: 2px;
        align-items: start;
      }

      .plot-box {
       padding: 0px;
       background-color: white;
       height: 440px; /* Increased by 10% */
       overflow: hidden;
      }
      
     .shift-down {
        margin-top: 0px; /* Slight vertical shift */
      }
    "))
  ),

  titlePanel("Figure 4: Forest Plot of DILI Adverse Events Based on the SMQ"),

  div(class = "plot-grid",
      div(class = "plot-box", plotOutput("forestPlot1", height = "440px")),
      div(class = "plot-box shift-down", plotOutput("forestPlot2", height = "440px")),
      div(class = "plot-box shift-down", plotOutput("forestPlot3",  height = "440px"))
  )
)

server <- function(input, output) {
  common_y_scale <- setdiff(levels(freqsmq2a1$SMQname), "<Missing>")

output$forestPlot1 <- renderPlot({
#Create main forest plot.
ggplot(freqsmq2b, aes(x = T1per, y = SMQname)) +
      geom_point(aes(color = "T1", shape = "T1"), size = 1) +
      geom_point(aes(x = T2per, color = "T2", shape = "T2"), size = 1) +
      geom_point(aes(x = PLper, color = "PL", shape = "PL"), size = 1) +
      scale_color_manual(values = c("T1" = "green", "T2" = "blue", "PL" = "red"),
                     labels = c(LabT1text, LabT2text, LabPLtext),
                     breaks = c("T1", "T2", "PL")) +
      scale_shape_manual(values = c("T1" = 16, "T2" = 17, "PL" = 18),
                     labels = c(LabT1text, LabT2text, LabPLtext),
                     breaks = c("T1", "T2", "PL")) +
      labs(x = "Percent of Subjects with AE", y = "") +
      theme(legend.position = c(0.5, .99),  # Position the legend just above the plot
        legend.title = element_blank(),
        legend.justification = c(0.5, 1),   # Center align the legend horizontally above the plot
        legend.margin = margin(t = 2)) +  
      theme(axis.text.y = element_text(size = 11, margin = margin(b = 35))) + 
guides(color = guide_legend(title = "Treatment Arm", 
                              ncol = 3),
         shape = guide_legend(title = "Treatment Arm", 
                              ncol = 3)) +
      theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
      theme(panel.background = element_rect(fill = "white")) +
      theme(axis.title.x = element_text(size = 11)) + 
geom_text_repel(aes(x = T1per, label = paste(Freq.x_T1, " (", round(T1per, 1), "%)", sep = "")),
                size = 3, color = "green", box.padding = 0.3, 
                nudge_x = ifelse(freqsmq2a$SMQname == "HEPATIC ENZYME INCREASED", -0.3, 
                                 ifelse(freqsmq2a$SMQname %in% c("HEPATIC FUNCTION ABNORMAL"), 0.3, 0.2)),
                nudge_y = ifelse(freqsmq2a$SMQname == "HEPATIC ENZYME INCREASED", -.2, 
                                 ifelse(freqsmq2a$SMQname %in% c("HEPATIC FUNCTION ABNORMAL"), -0.1, 0.2)),
                max.overlaps = Inf) +
    geom_text_repel(aes(x = T2per, label = paste(Freq.x_T2, " (", round(T2per, 1), "%)", sep = "")),
                    size = 3, color = "blue", box.padding = 0.25, force = 2.5, max.overlaps = Inf,
                    nudge_x = 0.15, nudge_y = -0.1) +
    geom_text_repel(aes(x = PLper, label = paste(Freq.x_PL, " (", round(PLper, 1), "%)", sep = "")),
                    size = 3, color = "red", box.padding = 0.25, force = 2.5, max.overlaps = Inf,
                    nudge_x = 0.15, nudge_y = 0.1) +
    geom_segment(aes(x = 0, xend = 2.5, y = SMQname, yend = SMQname), 
               color = "gray", linetype = "dotted", linewidth = 0.75) +
    scale_y_discrete(limits = common_y_scale)
  })

#Create adjoining forest plots with CI intervals and risk difference.
  
output$forestPlot2 <- renderPlot({
  ggplot(data = freqsmq2b, aes(x = RiskT1PL, y = SMQname)) + 
  geom_point() +
  geom_errorbarh(aes(xmin = lowerCIT1PL, xmax = upperCIT1PL), height = .5, linewidth = 1) +
  labs(x = "Risk Difference (95% CI)", y = "") +
  theme(panel.background = element_rect(fill = "white")) +
  geom_segment(aes(x = -.4, xend = 1.6, y = SMQname, yend = SMQname), 
               color = "gray", linetype = "dotted", linewidth = 0.55) +
  geom_text(aes(x = 1.25, y = 9.25), label = "Favors PL", size = 2.75, hjust = 0, vjust = 1) +
  geom_text(aes(x = -.05, y = 9.25), label = "Favors T1", size = 2.75, hjust = 1, vjust = 1) +
  geom_segment(aes(x = 0, xend = 0, y = 0, yend = 9.95), 
               color = "gray", linetype = "dotted", linewidth = 0.55) +
 theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
 theme(axis.text.y = element_blank(), margin = margin(b = 10))  +
  scale_y_discrete(limits = common_y_scale)
 })

output$forestPlot3 <- renderPlot({
  ggplot(data = freqsmq2b, aes(x = RiskT2T1, y = SMQname)) + 
  geom_point() +
  geom_errorbarh(aes(xmin = lowerCIT2T1, xmax = upperCIT2T1), height = .5, linewidth = 1) +
  labs(x = "Risk Difference (95% CI)", y = "") +
  theme(panel.background = element_rect(fill = "white")) +
  geom_segment(aes(x = -1.5, xend = .9, y = SMQname, yend = SMQname), 
               color = "gray", linetype = "dotted", linewidth = 0.85) +
  geom_segment(aes(x = 0, xend = 0, y = 0, yend = 9.95), 
               color = "gray", linetype = "dotted", linewidth = 0.55) +
  geom_text(aes(x = .60, y = 9.25), label = "Favors T2", size = 2.75, hjust = 0, vjust = 1) +
  geom_text(aes(x = -1.15, y = 9.25), label = "Favors T1", size = 2.75, hjust = 1, vjust = 1) +
  theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
  xlim(-1.5, .9) +
  theme(axis.text.y = element_blank(), margin = margin(b = 10))  +
  scale_y_discrete(limits = common_y_scale)
 })
}

shinyApp(ui = ui, server = server)


```
